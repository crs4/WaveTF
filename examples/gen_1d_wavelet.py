import tensorflow as tf
import pywt
from wavetf._general_conv import KerWaveLayer1D
import numpy as np
import math

ker_db10 = [
    [0.026670057900950818,     -1.326420300235487e-05],
    [0.18817680007762133,      -9.358867000108985e-05],
    [0.5272011889309198,       -0.0001164668549943862],
    [0.6884590394525921,       0.0006858566950046825],
    [0.2811723436604265,       0.00199240529499085],
    [-0.24984642432648865,     -0.0013953517469940798],
    [-0.19594627437659665,     -0.010733175482979604],
    [0.12736934033574265,      -0.0036065535669883944],
    [0.09305736460380659,      0.03321267405893324],
    [-0.07139414716586077,     0.02945753682194567],
    [-0.02945753682194567,     -0.07139414716586077],
    [0.03321267405893324,      -0.09305736460380659],
    [0.0036065535669883944,    0.12736934033574265],
    [-0.010733175482979604,    0.19594627437659665],
    [0.0013953517469940798,    -0.24984642432648865],
    [0.00199240529499085,      -0.2811723436604265],
    [-0.0006858566950046825,   0.6884590394525921],
    [-0.0001164668549943862,   -0.5272011889309198],
    [9.358867000108985e-05,    0.18817680007762133],
    [-1.326420300235487e-05,   -0.026670057900950818],
]

ker_db15 = [
    [0.004538537361577376,     6.133359913303714e-08],
    [0.04674339489275062,      6.316882325879451e-07],
    [0.20602386398692688,      1.8112704079399406e-06],
    [0.4926317717079753,       -3.3629871817363823e-06],
    [0.6458131403572103,       -2.8133296266037558e-05],
    [0.33900253545462167,      -2.579269915531323e-05],
    [-0.19320413960907623,     0.00015589648992055726],
    [-0.28888259656686216,     0.00035956524436229364],
    [0.06528295284876569,      -0.0003734823541372647],
    [0.19014671400708816,      -0.0019433239803823459],
    [-0.0396661765557336,      -0.00024175649075894543],
    [-0.11112093603713753,     0.0064877345603061454],
    [0.033877143923563204,     0.005101000360422873],
    [0.054780550584559995,     -0.015083918027862582],
    [-0.02576700732836694,     -0.020810050169636805],
    [-0.020810050169636805,    0.02576700732836694],
    [0.015083918027862582,     0.054780550584559995],
    [0.005101000360422873,     -0.033877143923563204],
    [-0.0064877345603061454,   -0.11112093603713753],
    [-0.00024175649075894543,  0.0396661765557336],
    [0.0019433239803823459,    0.19014671400708816],
    [-0.0003734823541372647,   -0.06528295284876569],
    [-0.00035956524436229364,  -0.28888259656686216],
    [0.00015589648992055726,   0.19320413960907623],
    [2.579269915531323e-05,    0.33900253545462167],
    [-2.8133296266037558e-05,  -0.6458131403572103],
    [3.3629871817363823e-06,   0.4926317717079753],
    [1.8112704079399406e-06,   -0.20602386398692688],
    [-6.316882325879451e-07,   0.04674339489275062],
    [6.133359913303714e-08,    -0.004538537361577376],
]
ker_db10 = tf.convert_to_tensor(ker_db10, dtype=tf.float64)
ker_db15 = tf.convert_to_tensor(ker_db15, dtype=tf.float64)

km = {'db10': ker_db10, 'db15': ker_db15}

errors = False
for ker, tf_ker in km.items():
    # init Wavelet layer with user-provide kernel
    db2 = KerWaveLayer1D(tf_ker)
    for sx in range(100, 120):
        # create random numpy array
        ran = np.random.rand(5, sx).astype(np.float64)
        # run pywavelet equivalent
        pyw = pywt.dwt(ran, ker, mode='periodization')
        pyw = np.stack((pyw[0], pyw[1]), axis=-1)
        # convert numpy array to tensor
        ten = tf.convert_to_tensor(ran)
        ten = tf.reshape(ten, ten.shape + (1,))
        tfw = db2.call(ten)
        # compute difference
        diff = (tfw - pyw).numpy()
        bd = tf_ker.shape[0]//2
        # compute max of difference, ignoring border (different padding)
        maxd = abs(diff[:, bd:-bd]).max()
        if (maxd>1e10):
            errors = True

if (errors):            
    print('Error: wavelets differ too much')
else:
    print('Test completed without errors')
